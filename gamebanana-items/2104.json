{
	"_aAlternateFileSources": null,
	"_aFiles": [
		{
			"_aMetadata": {
				"_aArchiveFileTree": [
					"FFAFilter.bsp",
					"FFAFilter.vmf"
				]
			},
			"_bContainsExe": false,
			"_idRow": 45447,
			"_nDownloadCount": 330,
			"_nFilesize": 58319,
			"_sAnalysisResult": "File passed analysis",
			"_sAnalysisState": "done",
			"_sClamAvResult": "clean",
			"_sDescription": "",
			"_sDownloadUrl": "https://gamebanana.com/dl/45447",
			"_sFile": "ffafilter.7z",
			"_sMd5Checksum": "",
			"_tsDateAdded": 1363394810
		}
	],
	"_aLatestUpdates": [],
	"_idRow": 2104,
	"_sName": "Non-Linear Multi-Stage Map Completion",
	"_sText": "A system that allows players to complete a multi-stage map in any order. There are some limitations and quirks, however.\r\n\r\nThere is a limitation of a mere four areas due to the way I've done this, however this has the benefit of only using 5 entities per player. Other methods, such as duplicating teleporters and triggers for each player or creating every combination of filters for every situation are a huge waste of entities and a pain to manage.\r\n\r\nThere are also some issues due to player properties not being reset when they respawn, and the lack of any means to clear them. If a player completes a couple of levels and dies then respawns, they will be able to carry on where they left off, which may be a good thing. However, if a player completes some levels then leaves, if another player joins and receives the same targetname as the person who left, then the new player will be able to carry on where the previous left off. This may be an issue if the server allows players to spawn at any time (ghost respawn server plugins are untested, so the behaviour in regards to ghost players is unknown).\r\n\r\n<h3 class=\"BlueColor\">How It Works:</h3>\r\n\r\nIf you are unfamiliar with anything below, please refer to the <a href=\"http://developer.valvesoftware.com/wiki/Main_Page\">Developer Wiki</a>.\r\n\r\nThis system makes use of AddOutput, OnUser1-4 and FireUser1-4 to have the players keep track of their own entities.\r\n\r\nEach spawn point has a trigger, a logic\\_branch for each level and a logic\\_branch\\_listener to keep track of them. The triggers are filtered to ignore any entity with a name beginning with \"player\", and when a player triggers the trigger, their name is set to player1 (\"1\" will be whichever spawn point it is, e.g \"player2\" for the second spawn point). All spawn triggers will then ignore any player who has already touched a spawn trigger. The other outputs on the trigger add outputs to the player who touched the trigger (the !activator) to set each branch to true when the relative output is fired.\r\n\r\nOnTrigger, !activator, AddOutput, OnUser1 branch1_t1:SetValue:1:0:-1\r\n\r\nadds the output:\r\n\r\nOnUser1, branch1_t1, SetValue, 1, 0, -1\r\n\r\nto the player who touched the trigger. Then when the player's FireUser1 input is fired, it will do whatever we told it to do in its OnUser1 output (FireUser1 -> OnUser1, FireUser2 -> OnUser2 etc). In this case it sets the player's first logic\\_branch to true.\r\n\r\nAs you may have guessed already, the teleport at the end of each stage does the above. When a player triggers the teleport, their FireUser# input is fired, which then sets the linked branch to true, indicating that the level has been completed. Doing it this way instead of adding to a counter means that when the player finishes the level again, the branch is still true, but with a counter you'd still increase it (we can't filter the player name for the teleport as we can't change it, else other things will go wrong).\r\n\r\nWhy can't we change their name? Well, for one, they would be able to trigger the spawn triggers again which would enable them to control multiple sets of branches at once (as we can't remove the outputs we added with AddOutput and they don't reset) and possibly mess with other people (this could possibly be worked around by keeping the spawn separate in some way).\r\n\r\nSecondly, when the logic\\_branch\\_listener finds that all the branches are true, and thus the player has finished, it can't reference the player without their name (how can we tell which player's listener it is? There's no hierarchy!). With a consistent player name, when the player has finished, we can 'teleport' them to the end area using their name. Usually you would do this by changing their name to a filter allowed by an ending trigger\\_teleport, but we can't change their name.\r\n\r\nTo get around this, we need to use somewhat of a little trick by directly setting the player's origin property to where we want them to be. If you look at a branch listener, you'll see the output \"OnAllTrue, player#, AddOutput, origin x y z\". This sets their position to the coordinates x y z. You'll need to change these coordinates to your ending area if you use this prefab. To get an entity's coordinates, select it and look at the bottom right of Hammer (eg 16w 16l 16h @(<u>-128 128 8</u>)).\r\n\r\n<h3 class=\"BlueColor\">How To Use:</h3>\r\n\r\nEach spawn needs the 1 trigger, 4 branches and 1 branch listener. To add more spawns, copy the group of entities around the info\\_player\\_terrorist. Some of the names should work with automatic renaming if you use Paste Special to paste the copies. It should be obvious which names to change, but if it isn't:\r\n\r\n<u class=\"BlueColor\"><b>Spawn 1</u> -> <u class=\"RedColor\">New spawn (3)</b></u><br>\r\ntargetname:<br>\r\nbranch1(-4)\\_<span class=\"BlueColor\">t1</span> -> branch1(-4)\\_<span class=\"RedColor\">t3</span><br>\r\nbranchListener\\_<span class=\"BlueColor\">t1</span> -> branchListener\\_<span class=\"RedColor\">t3</span>\r\n\r\nOutputs:<br>\r\n(branchListener)<br>\r\nOnAllTrue, <span class=\"BlueColor\">player1</span>, ... -> OnAllTrue, <span class=\"RedColor\">player3</span>, ...<br>\r\nOnAllTrue, branch1(-4)\\__<span class=\"BlueColor\">t1</span>, ... -> OnAllTrue, branch1(-4)\\_<span class=\"RedColor\">t3</span>, ...\r\n\r\n(trigger)<br>\r\nOnTrigger, !activator, AddOutput, targetname <span class=\"BlueColor\">player1</span> -> targetname <span class=\"RedColor\">player3</span><br>\r\nOnTrigger, !activator, AddOutput, OnUser1 <span class=\"BlueColor\">branch1(-4)\\_t1</span>:SetValue:1:0:-1 -> OnUser1 <span class=\"RedColor\">branch1(-4)\\_t3</span>\r\n\r\n<h3 class=\"BlueColor\">Video:</h3>\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/EF4WBBdzSVE\" frameborder=\"0\" allowfullscreen></iframe>\r\n\r\nA small part at the start is missing but it's just completing the first stage. One of the issues highlighted above is displayed in the video (the last run through)."
}